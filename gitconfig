[user]
  name = Melissa Xie
  email = me@melissaxie.com

[core]
  excludesfile = ~/.gitignore

[color]
  ui = auto
  interactive = auto
  branch = auto
  diff = auto
  status = auto

[color "status"]
  untracked = cyan

[alias]
  a = add -v
  aa = add -Av
  cam = commit -v --amend
  ap = add -p
  b = branch
  bd = branch -D
  br = browse
  cah = commit --amend -C HEAD
  cf = config
  cm = commit -v
  co = checkout
  cp = cherry-pick
  d = diff
  dc = diff --cached
  dm = diff main
  ds = diff --stat
  l = log
  lc = !sh -c 'git log -1 --format=format:%H' | pbcopy # copy last commit message
  lg = log --graph --pretty=format:'%Cred%h%Creset - %s %Cgreen(%an - %cr)%Creset' --abbrev-commit --date=relative
  lm = log main..
  m = merge --ff-only
  nb = checkout -b
  p = push
  pc = !git push && git lc
  pf = push -f
  pop = stash pop
  r = rebase
  ra = rebase --abort
  ri = rebase -i
  rim = rebase -i main
  sm = commit -Sv
  sf = show --name-only
  st = status
  uc = uncommit
  uf = unfuck
  us = unstage
  current-branch = !sh -c 'git rev-parse --abbrev-ref HEAD' -
  uncommit = reset HEAD^
  unfuck = !sh -c 'branch=$(git current-branch) && git reset --hard origin/$branch'
  unstage = reset HEAD

  con = !git add -A && git rebase --continue
  # delete any local branches that have already been merged
  db = !git branch --merged | grep -v main | xargs git branch -d
  # Merge current branch into master, only if it's a fast-forward. Doesn't check
  # out master if it's not a FF merge.
  mm = !test `git rev-parse master` = $(git merge-base HEAD master) && git checkout master && git merge HEAD@{1} || echo "Non-fastforward"
  up = !git co main && git pull && git co - && git rebase main

[push]
  # Push current branch even if you've never pushed it before
  default = current

[help]
  autocorrect = 1

[credential]
  helper = osxkeychain

[gpg]
  program = /usr/local/bin/gpg2

[github]
  user = mxie

[fetch]
  prune = true

[diff]
  colorMoved = zebra

[pull]
  ff = only
